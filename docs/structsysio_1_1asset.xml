<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structsysio_1_1asset" kind="struct" language="C++" prot="public">
    <compoundname>sysio::asset</compoundname>
    <includes refid="asset_8hpp" local="no">asset.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsysio_1_1asset_af7fa1f9918f151ee601f837ea8a79df8_1af7fa1f9918f151ee601f837ea8a79df8" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t sysio::asset::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The amount of the asset </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="30" column="20" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsysio_1_1asset_a298f43036710fc8d6de6d1a68d78cdd2_1a298f43036710fc8d6de6d1a68d78cdd2" prot="public" static="no" mutable="no">
        <type><ref refid="classsysio_1_1symbol" kindref="compound">symbol</ref></type>
        <definition>symbol sysio::asset::symbol</definition>
        <argsstring></argsstring>
        <name>symbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The symbol name of the asset </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="35" column="15" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structsysio_1_1asset_a0ea85ad3fd171559419728e6686013c9_1a0ea85ad3fd171559419728e6686013c9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int64_t</type>
        <definition>constexpr int64_t sysio::asset::max_amount</definition>
        <argsstring></argsstring>
        <name>max_amount</name>
        <initializer>= (1LL &lt;&lt; 62) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum amount possible for this asset. It&apos;s capped to 2^62 - 1 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="40" column="32" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsysio_1_1asset_a44cbc796ad8acae2f786de42c428c462_1a44cbc796ad8acae2f786de42c428c462" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sysio::asset::asset</definition>
        <argsstring>()</argsstring>
        <name>asset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="42" column="7" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_ab23d20088814f99d291193718db10c68_1ab23d20088814f99d291193718db10c68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sysio::asset::asset</definition>
        <argsstring>(int64_t a, class symbol s)</argsstring>
        <name>asset</name>
        <param>
          <type>int64_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>class <ref refid="classsysio_1_1symbol" kindref="compound">symbol</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new asset given the symbol name and the amount</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>- The amount of the asset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>- The name of the symbol </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="50" column="7" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_a04e0c5eba1eaeac34a93102e1301a8f1_1a04e0c5eba1eaeac34a93102e1301a8f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sysio::asset::is_amount_within_range</definition>
        <argsstring>() const</argsstring>
        <name>is_amount_within_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the amount doesn&apos;t exceed the max amount</para>
<para><simplesect kind="return"><para>true - if the amount doesn&apos;t exceed the max amount </para>
</simplesect>
<simplesect kind="return"><para>false - otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="63" column="12" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_acb3df677195ca7c80e6f128a19873927_1acb3df677195ca7c80e6f128a19873927" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sysio::asset::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the asset is valid. A valid asset has its amount &lt;= max_amount and its symbol name valid</para>
<para><simplesect kind="return"><para>true - if the asset is valid </para>
</simplesect>
<simplesect kind="return"><para>false - otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="71" column="12" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_a61744dd3f36be3dd69db6fb9d7775aa3_1a61744dd3f36be3dd69db6fb9d7775aa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sysio::asset::set_amount</definition>
        <argsstring>(int64_t a)</argsstring>
        <name>set_amount</name>
        <param>
          <type>int64_t</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the amount of the asset</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>- New amount for the asset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="78" column="12" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_ae045be06766a4a5698e40f3f69ba4cca_1ae045be06766a4a5698e40f3f69ba4cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* sysio::asset::write_as_string</definition>
        <argsstring>(char *begin, char *end, bool dry_run=false) const</argsstring>
        <name>write_as_string</name>
        <param>
          <type>char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dry_run</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Writes the asset as a string to the provided char buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Writes the asset as a string to the provided char buffer</para>
<para><simplesect kind="pre"><para><ref refid="structsysio_1_1asset_acb3df677195ca7c80e6f128a19873927_1acb3df677195ca7c80e6f128a19873927" kindref="member">is_valid()</ref> == true </para>
</simplesect>
<simplesect kind="pre"><para>The range [begin, end) must be a valid range of memory to write to. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>- The start of the char buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>- Just past the end of the char buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dry_run</parametername>
</parameternamelist>
<parameterdescription>
<para>- If true, do not actually write anything into the range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char* - Just past the end of the last character that would be written assuming dry_run == false and end was large enough to provide sufficient space. (Meaning only applies if returned pointer &gt;= begin.) </para>
</simplesect>
<simplesect kind="post"><para>If the output string fits within the range [begin, end) and dry_run == false, the range [begin, returned pointer) contains the string representation of the asset. Nothing is written if dry_run == true or returned pointer &gt; end (insufficient space) or if returned pointer &lt; begin (overflow in calculating desired end). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="335" column="12" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="335" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_a667dc5962cd118c5b6d95ef5a024fde7_1a667dc5962cd118c5b6d95ef5a024fde7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string sysio::asset::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <briefdescription>
<para>asset to std::string </para>
        </briefdescription>
        <detaileddescription>
<para>asset to std::string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="360" column="19" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="structsysio_1_1asset_a4c2a3bd81cdbada25090e0322a51b106_1a4c2a3bd81cdbada25090e0322a51b106" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sysio::asset::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
<para>Print the asset </para>
        </briefdescription>
        <detaileddescription>
<para>Print the asset </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/asset.hpp" line="374" column="12" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="374" bodyend="382"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Stores information for owner of asset </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>sysio::symbol</label>
        <link refid="classsysio_1_1symbol"/>
      </node>
      <node id="1">
        <label>sysio::asset</label>
        <link refid="structsysio_1_1asset"/>
        <childnode refid="2" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/sysiolib/core/sysio/asset.hpp" line="26" column="4" bodyfile="libraries/sysiolib/core/sysio/asset.hpp" bodystart="26" bodyend="385"/>
    <listofallmembers>
      <member refid="structsysio_1_1asset_af7fa1f9918f151ee601f837ea8a79df8_1af7fa1f9918f151ee601f837ea8a79df8" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>amount</name></member>
      <member refid="structsysio_1_1asset_a44cbc796ad8acae2f786de42c428c462_1a44cbc796ad8acae2f786de42c428c462" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>asset</name></member>
      <member refid="structsysio_1_1asset_ab23d20088814f99d291193718db10c68_1ab23d20088814f99d291193718db10c68" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>asset</name></member>
      <member refid="structsysio_1_1asset_a04e0c5eba1eaeac34a93102e1301a8f1_1a04e0c5eba1eaeac34a93102e1301a8f1" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>is_amount_within_range</name></member>
      <member refid="structsysio_1_1asset_acb3df677195ca7c80e6f128a19873927_1acb3df677195ca7c80e6f128a19873927" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>is_valid</name></member>
      <member refid="structsysio_1_1asset_a0ea85ad3fd171559419728e6686013c9_1a0ea85ad3fd171559419728e6686013c9" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>max_amount</name></member>
      <member refid="structsysio_1_1asset_a4c2a3bd81cdbada25090e0322a51b106_1a4c2a3bd81cdbada25090e0322a51b106" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>print</name></member>
      <member refid="structsysio_1_1asset_a61744dd3f36be3dd69db6fb9d7775aa3_1a61744dd3f36be3dd69db6fb9d7775aa3" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>set_amount</name></member>
      <member refid="structsysio_1_1asset_a298f43036710fc8d6de6d1a68d78cdd2_1a298f43036710fc8d6de6d1a68d78cdd2" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>symbol</name></member>
      <member refid="structsysio_1_1asset_a667dc5962cd118c5b6d95ef5a024fde7_1a667dc5962cd118c5b6d95ef5a024fde7" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>to_string</name></member>
      <member refid="structsysio_1_1asset_ae045be06766a4a5698e40f3f69ba4cca_1ae045be06766a4a5698e40f3f69ba4cca" prot="public" virt="non-virtual"><scope>sysio::asset</scope><name>write_as_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
