<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classsysio_1_1fixed__bytes" kind="class" language="C++" prot="public">
    <compoundname>sysio::fixed_bytes</compoundname>
    <includes refid="fixed__bytes_8hpp" local="no">fixed_bytes.hpp</includes>
    <innerclass refid="structsysio_1_1fixed__bytes_1_1bool__pack" prot="private">sysio::fixed_bytes::bool_pack</innerclass>
    <templateparamlist>
      <param>
        <type>size_t</type>
        <declname>Size</declname>
        <defname>Size</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsysio_1_1fixed__bytes_1a2cfd7fc1864b62804ad68f799b09cd5b" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>bool...</type>
            <declname>bs</declname>
            <defname>bs</defname>
          </param>
        </templateparamlist>
        <type>std::is_same&lt; bool_pack&lt; bs..., true &gt;, bool_pack&lt; true, bs... &gt; &gt;</type>
        <definition>using sysio::fixed_bytes&lt; Size &gt;::all_true =  std::is_same&lt; bool_pack&lt;bs..., true&gt;, bool_pack&lt;true, bs...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>all_true</name>
        <qualifiedname>sysio::fixed_bytes::all_true</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="59" column="10" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" prot="public" static="no">
        <type>uint128_t</type>
        <definition>uint128_t sysio::fixed_bytes&lt; Size &gt;::word_t</definition>
        <argsstring></argsstring>
        <name>word_t</name>
        <qualifiedname>sysio::fixed_bytes::word_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="94" column="28" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsysio_1_1fixed__bytes_1a01c6b39567ad32ceaed4cbdb6f563f94" prot="private" static="no" mutable="no">
        <type>std::array&lt; <ref refid="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" kindref="member">word_t</ref>, <ref refid="classsysio_1_1fixed__bytes_ac0e00da6877e9eb06189feb7d58f2465_1ac0e00da6877e9eb06189feb7d58f2465" kindref="member">num_words</ref>()&gt;</type>
        <definition>std::array&lt;word_t, num_words()&gt; sysio::fixed_bytes&lt; Size &gt;::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>sysio::fixed_bytes::_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="274" column="21" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_1a659d06c837f078f12a3b364cd8d3ba03" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Word</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>NumWords</declname>
            <defname>NumWords</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void sysio::fixed_bytes&lt; Size &gt;::set_from_word_sequence</definition>
        <argsstring>(const Word *arr_begin, const Word *arr_end, fixed_bytes&lt; Size &gt; &amp;key)</argsstring>
        <name>set_from_word_sequence</name>
        <qualifiedname>sysio::fixed_bytes::set_from_word_sequence</qualifiedname>
        <param>
          <type>const Word *</type>
          <declname>arr_begin</declname>
        </param>
        <param>
          <type>const Word *</type>
          <declname>arr_end</declname>
        </param>
        <param>
          <type><ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref>&lt; Size &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="62" column="22" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="62" bodyend="90"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_ac0e00da6877e9eb06189feb7d58f2465_1ac0e00da6877e9eb06189feb7d58f2465" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static constexpr size_t sysio::fixed_bytes&lt; Size &gt;::num_words</definition>
        <argsstring>()</argsstring>
        <name>num_words</name>
        <qualifiedname>sysio::fixed_bytes::num_words</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of words contained in this <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object. A word is defined to be 16 bytes in size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="100" column="34" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_a40de8b9caf7258f0327df706d80ffe4e_1a40de8b9caf7258f0327df706d80ffe4e" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static constexpr size_t sysio::fixed_bytes&lt; Size &gt;::padded_bytes</definition>
        <argsstring>()</argsstring>
        <name>padded_bytes</name>
        <qualifiedname>sysio::fixed_bytes::padded_bytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of padded bytes contained in this <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object. Padded bytes are the remaining bytes inside the <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object after all the words are allocated </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="106" column="34" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_add81e8e61cc4870e192a3f174dd0f9b9_1add81e8e61cc4870e192a3f174dd0f9b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FirstWord</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Rest</declname>
            <defname>Rest</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref>&lt; Size &gt;</type>
        <definition>static fixed_bytes&lt; Size &gt; sysio::fixed_bytes&lt; Size &gt;::make_from_word_sequence</definition>
        <argsstring>(typename std::enable_if&lt; std::is_integral&lt; FirstWord &gt;::value &amp;&amp;std::is_unsigned&lt; FirstWord &gt;::value &amp;&amp;!std::is_same&lt; FirstWord, bool &gt;::value &amp;&amp;sizeof(FirstWord)&lt;=sizeof(word_t) &amp;&amp;all_true&lt;(std::is_same&lt; FirstWord, Rest &gt;::value)... &gt;::value, FirstWord &gt;::type first_word, Rest... rest)</argsstring>
        <name>make_from_word_sequence</name>
        <qualifiedname>sysio::fixed_bytes::make_from_word_sequence</qualifiedname>
        <param>
          <type>typename std::enable_if&lt; std::is_integral&lt; FirstWord &gt;::value &amp;&amp;std::is_unsigned&lt; FirstWord &gt;::value &amp;&amp;!std::is_same&lt; FirstWord, bool &gt;::value &amp;&amp;sizeof(FirstWord)&lt;=sizeof(<ref refid="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" kindref="member">word_t</ref>) &amp;&amp;all_true&lt;(std::is_same&lt; FirstWord, Rest &gt;::value)... &gt;::value, FirstWord &gt;::type</type>
          <declname>first_word</declname>
        </param>
        <param>
          <type>Rest...</type>
          <declname>rest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object from a sequence of words</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FirstWord</parametername>
</parameternamelist>
<parameterdescription>
<para>- The type of the first word in the sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rest</parametername>
</parameternamelist>
<parameterdescription>
<para>- The type of the remaining words in the sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first_word</parametername>
</parameternamelist>
<parameterdescription>
<para>- The first word in the sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rest</parametername>
</parameternamelist>
<parameterdescription>
<para>- The remaining words in the sequence </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="172" column="10" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="172" bodyend="188"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_a8c5d1c71b3b0557a911e7cd373dfb3ac_1a8c5d1c71b3b0557a911e7cd373dfb3ac" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>sysio::fixed_bytes&lt; Size &gt;::fixed_bytes</definition>
        <argsstring>()</argsstring>
        <name>fixed_bytes</name>
        <qualifiedname>sysio::fixed_bytes::fixed_bytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor to <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object which initializes all bytes to zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="111" column="20" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_aebe0d2ada8807e0e2035dd04fdb988a8_1aebe0d2ada8807e0e2035dd04fdb988a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>sysio::fixed_bytes&lt; Size &gt;::fixed_bytes</definition>
        <argsstring>(const std::array&lt; word_t, num_words()&gt; &amp;arr)</argsstring>
        <name>fixed_bytes</name>
        <qualifiedname>sysio::fixed_bytes::fixed_bytes</qualifiedname>
        <param>
          <type>const std::array&lt; <ref refid="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" kindref="member">word_t</ref>, <ref refid="classsysio_1_1fixed__bytes_ac0e00da6877e9eb06189feb7d58f2465_1ac0e00da6877e9eb06189feb7d58f2465" kindref="member">num_words</ref>()&gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor to <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object from std::array of <ref refid="classsysio_1_1fixed__bytes_ac0e00da6877e9eb06189feb7d58f2465_1ac0e00da6877e9eb06189feb7d58f2465" kindref="member">num_words()</ref> word_t types</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arr</parametername>
</parameternamelist>
<parameterdescription>
<para>data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="118" column="10" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_a37791ddd82a554f237c2454299f306a7_1a37791ddd82a554f237c2454299f306a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Word</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>NumWords</declname>
            <defname>NumWords</defname>
          </param>
          <param>
            <type>typename Enable</type>
            <defval>typename std::enable_if&lt;std::is_integral&lt;Word&gt;::value &amp;&amp;                                                             std::is_unsigned&lt;Word&gt;::value &amp;&amp;                                                             !std::is_same&lt;Word, bool&gt;::value &amp;&amp;                                                             std::less&lt;size_t&gt;{}(sizeof(Word), sizeof(<ref refid="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" kindref="member">word_t</ref>))&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>sysio::fixed_bytes&lt; Size &gt;::fixed_bytes</definition>
        <argsstring>(const std::array&lt; Word, NumWords &gt; &amp;arr)</argsstring>
        <name>fixed_bytes</name>
        <qualifiedname>sysio::fixed_bytes::fixed_bytes</qualifiedname>
        <param>
          <type>const std::array&lt; Word, NumWords &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor to <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object from std::array of Word types smaller in size than word_t</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="133" column="10" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="133" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_a2addaa5da0fe9ccbfbaece359b2a2928_1a2addaa5da0fe9ccbfbaece359b2a2928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Word</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>NumWords</declname>
            <defname>NumWords</defname>
          </param>
          <param>
            <type>typename Enable</type>
            <defval>typename std::enable_if&lt;std::is_integral&lt;Word&gt;::value &amp;&amp;                                                             std::is_unsigned&lt;Word&gt;::value &amp;&amp;                                                             !std::is_same&lt;Word, bool&gt;::value &amp;&amp;                                                             std::less&lt;size_t&gt;{}(sizeof(Word), sizeof(<ref refid="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" kindref="member">word_t</ref>))&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>sysio::fixed_bytes&lt; Size &gt;::fixed_bytes</definition>
        <argsstring>(const Word(&amp;arr)[NumWords])</argsstring>
        <name>fixed_bytes</name>
        <qualifiedname>sysio::fixed_bytes::fixed_bytes</qualifiedname>
        <param>
          <type>const Word(&amp;)</type>
          <declname>arr</declname>
          <array>[NumWords]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor to <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object from fixed-sized C array of Word types smaller in size than word_t</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Source data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="152" column="10" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="152" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_af2dac263ee619fb6fc7f6fb627441229_1af2dac263ee619fb6fc7f6fb627441229" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const auto &amp;</type>
        <definition>const auto &amp; sysio::fixed_bytes&lt; Size &gt;::get_array</definition>
        <argsstring>() const</argsstring>
        <name>get_array</name>
        <qualifiedname>sysio::fixed_bytes::get_array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the contained std::array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="193" column="21" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_ac80cc6b881c32d57aed1ab56e2932592_1ac80cc6b881c32d57aed1ab56e2932592" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto sysio::fixed_bytes&lt; Size &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <qualifiedname>sysio::fixed_bytes::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the underlying data of the contained std::array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="198" column="15" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_ae782872d63020d8f56b4d3b154ba43c4_1ae782872d63020d8f56b4d3b154ba43c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto sysio::fixed_bytes&lt; Size &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>sysio::fixed_bytes::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the contained std::array </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="212" column="15" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_acace65d24dd5689f49ba2dcb3198493a_1acace65d24dd5689f49ba2dcb3198493a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; uint8_t, Size &gt;</type>
        <definition>std::array&lt; uint8_t, Size &gt; sysio::fixed_bytes&lt; Size &gt;::extract_as_byte_array</definition>
        <argsstring>() const</argsstring>
        <name>extract_as_byte_array</name>
        <qualifiedname>sysio::fixed_bytes::extract_as_byte_array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the contained data as an array of bytes</para>
<para><simplesect kind="return"><para>- the extracted data as array of bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="220" column="21" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="220" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classsysio_1_1fixed__bytes_adc9f1e733fb2c60190ee9ba83667e3ec_1adc9f1e733fb2c60190ee9ba83667e3ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sysio::fixed_bytes&lt; Size &gt;::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <qualifiedname>sysio::fixed_bytes::print</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> as a hexidecimal string</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>to be printed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="251" column="22" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="251" bodyend="254"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Fixed size byte array sorted lexicographically</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>- Size of the <ref refid="classsysio_1_1fixed__bytes" kindref="compound">fixed_bytes</ref> object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="libraries/sysiolib/core/sysio/fixed_bytes.hpp" line="54" column="4" bodyfile="libraries/sysiolib/core/sysio/fixed_bytes.hpp" bodystart="54" bodyend="275"/>
    <listofallmembers>
      <member refid="classsysio_1_1fixed__bytes_1a01c6b39567ad32ceaed4cbdb6f563f94" prot="private" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>_data</name></member>
      <member refid="classsysio_1_1fixed__bytes_1a2cfd7fc1864b62804ad68f799b09cd5b" prot="private" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>all_true</name></member>
      <member refid="classsysio_1_1fixed__bytes_ac80cc6b881c32d57aed1ab56e2932592_1ac80cc6b881c32d57aed1ab56e2932592" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>data</name></member>
      <member refid="classsysio_1_1fixed__bytes_acace65d24dd5689f49ba2dcb3198493a_1acace65d24dd5689f49ba2dcb3198493a" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>extract_as_byte_array</name></member>
      <member refid="classsysio_1_1fixed__bytes_a8c5d1c71b3b0557a911e7cd373dfb3ac_1a8c5d1c71b3b0557a911e7cd373dfb3ac" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>fixed_bytes</name></member>
      <member refid="classsysio_1_1fixed__bytes_aebe0d2ada8807e0e2035dd04fdb988a8_1aebe0d2ada8807e0e2035dd04fdb988a8" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>fixed_bytes</name></member>
      <member refid="classsysio_1_1fixed__bytes_a37791ddd82a554f237c2454299f306a7_1a37791ddd82a554f237c2454299f306a7" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>fixed_bytes</name></member>
      <member refid="classsysio_1_1fixed__bytes_a2addaa5da0fe9ccbfbaece359b2a2928_1a2addaa5da0fe9ccbfbaece359b2a2928" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>fixed_bytes</name></member>
      <member refid="classsysio_1_1fixed__bytes_af2dac263ee619fb6fc7f6fb627441229_1af2dac263ee619fb6fc7f6fb627441229" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>get_array</name></member>
      <member refid="classsysio_1_1fixed__bytes_add81e8e61cc4870e192a3f174dd0f9b9_1add81e8e61cc4870e192a3f174dd0f9b9" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>make_from_word_sequence</name></member>
      <member refid="classsysio_1_1fixed__bytes_ac0e00da6877e9eb06189feb7d58f2465_1ac0e00da6877e9eb06189feb7d58f2465" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>num_words</name></member>
      <member refid="classsysio_1_1fixed__bytes_a40de8b9caf7258f0327df706d80ffe4e_1a40de8b9caf7258f0327df706d80ffe4e" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>padded_bytes</name></member>
      <member refid="classsysio_1_1fixed__bytes_adc9f1e733fb2c60190ee9ba83667e3ec_1adc9f1e733fb2c60190ee9ba83667e3ec" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>print</name></member>
      <member refid="classsysio_1_1fixed__bytes_1a659d06c837f078f12a3b364cd8d3ba03" prot="private" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>set_from_word_sequence</name></member>
      <member refid="classsysio_1_1fixed__bytes_ae782872d63020d8f56b4d3b154ba43c4_1ae782872d63020d8f56b4d3b154ba43c4" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>size</name></member>
      <member refid="classsysio_1_1fixed__bytes_a7ca85de1657ab41f1406d684da982c87_1a7ca85de1657ab41f1406d684da982c87" prot="public" virt="non-virtual"><scope>sysio::fixed_bytes</scope><name>word_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
